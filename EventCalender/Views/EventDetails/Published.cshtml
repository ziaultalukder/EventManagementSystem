@model EventCalender.ViewModels.PublishedViewModel
@{
    ViewBag.Title = "Published";
}

<h2>Published</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4> Published Your Event</h4>
        <hr/>

        <div class="form-group">
            @Html.LabelFor(model => model.EventDetailsId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDetailsId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventTypeName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventTypeName,  new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EventTypeName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventVanueName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventVanueName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventVanueName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventTitle, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventTitle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EventTitle, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventStartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventStartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventEndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventEndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventMaxTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventMaxTime, new {htmlAttributes = new {@class = "form-control",}})
                @Html.ValidationMessageFor(model => model.EventMaxTime, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPublishText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsPublishText, new { htmlAttributes = new { @class = "form-control", } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                @if (Model.IsActive != true)
                {
                    <input type="submit" value="Publish" class="btn btn-default"/>
                }
                else
                {
                    <input type="submit" value="UnPublish" class="btn btn-default" />
                }

                @*@if (Model.IsActive == true)
                {
                    <input type="submit" value="Publish" class="btn btn-default" />
                }
                else if (Model.IsActive)
                {
                    <input type="submit" value="UnPublished" class="btn btn-default" />
                }*@

            </div>
        </div>

    </div>
}


